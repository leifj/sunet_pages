<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="index.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="SDK Reference Guide|PKCS#11 Support">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Using the PKCS#11 Sample</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/TableStyles/List1.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/Breadcrumbs.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/Gemalto_Template_Enterprise.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <table style="width: 100%;border-spacing: 0px 0px;mc-table-style: url('../../Resources/TableStyles/Breadcrumbs.css');border-left-style: none;border-left-width: 1px;border-left-color: #000000;border-right-style: none;border-right-width: 1px;border-right-color: #000000;border-top-style: none;border-top-width: 0px;border-top-color: #000000;border-bottom-style: solid;border-bottom-width: 2px;border-bottom-color: #e6e6e6;" class="TableStyle-Breadcrumbs" cellspacing="0">
            <col style="width: 41px;" class="TableStyle-Breadcrumbs-Column-Column1" />
            <col class="TableStyle-Breadcrumbs-Column-Column1" />
            <tbody>
                <tr class="TableStyle-Breadcrumbs-Body-Body1">
                    <th class="TableStyle-Breadcrumbs-BodyB-Column1-Body1">
                        <p class="home" style="font-weight: normal;"><a href="../../Home_sa.htm">Home</a> &gt;
                        </p>
                    </th>
                    <th class="TableStyle-Breadcrumbs-BodyA-Column1-Body1">
                        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix">  <![CDATA[ ]]></span><span class="MCBreadcrumbsSelf">SDK Reference Guide</span><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="pkcs11.htm">PKCS#11 Support</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Using the PKCS#11 Sample</span>
                        </div>
                    </th>
                </tr>
            </tbody>
        </table>
        <h2>Using the PKCS#11 Sample</h2>
        <p>The SafeNet SDK includes a simple "C" language cross platform source example, <b>p11Sample</b>, that  demonstrates the following: </p>
        <p class="ul1" data-mc-autonum="&lt;b&gt;•&lt;/b&gt;"><span class="autonumber"><span class="ul1Bullet"><b>•</b></span></span> how to dynamically load the SafeNet cryptoki library</p>
        <p class="ul1" data-mc-autonum="&lt;b&gt;•&lt;/b&gt;"><span class="autonumber"><span class="ul1Bullet"><b>•</b></span></span>how to obtain the function pointers to the exported PKCS11 standard functions and the SafeNet extension functions.</p>
        <p>The sample demonstrates how to invoke some, but not all of the API functions.</p>
        <h3>The SfntLibPath Environment Variable</h3>
        <p>The sample depends on an environment variable created and exported prior to execution.  This variable specifies the location of <b>cryptoki.dll</b> (Windows) or <b>libCryptoki2.so</b> on Linux/UNIX. The variable is called <b>SfntLibPath</b>. You are free to provide your own means for locating the library.</p>
        <h3>What p11Sample Does</h3>
        <p>The p11Sample program performs the following actions:</p>
        <p class="ol1Start" data-mc-autonum="1."><span class="autonumber"><span class="ol1Number">1.</span></span>The sample first attempts to load the dynamic library in the function called <b>LoadP11Functions</b>. This calls <b>LoadLibrary</b> (Windows) or <b>dlopen</b> (Linux/UNIX).</p>
        <p class="ol1" data-mc-autonum="2."><span class="autonumber"><span class="ol1Number">2.</span></span>The function then attempts to get a function pointer to the PKCS11 API <b>C_GetFunctionList</b> using <b>GetProcAddress</b> (Windows) or <b>dlsym</b> (Linux/UNIX).</p>
        <p class="ol1" data-mc-autonum="3."><span class="autonumber"><span class="ol1Number">3.</span></span>Once the function pointer is obtained, use the API to obtain a pointer called <b>P11Functions</b> that points to the static CK_FUNCTION_LIST structure in the library. This structure holds pointers to all the other PKCS11 API functions supported by the library.</p>
        <p class="listLevel1">At this point, if successful, PKCS11 APIs may be invoked like the following:</p><pre class="listLevel1" xml:space="preserve">P11Functions-&gt;C_Initialize(...); &#160;<br />P11Functions-&gt;C_GetSlotList(...); &#160;<br />P11Functions-&gt;C_OpenSession(...);&#160;&#160;<br />P11Functions-&gt;C_Login(...); &#160;<br />P11Functions-&gt;C_GenerateKey(...); &#160;<br />P11Functions-&gt;C_Encrypt(...); &#160;<br />: &#160;<br />: &#160;<br />etc</pre><pre class="listLevel1" xml:space="preserve">&#160;</pre>
        <p class="ol1" data-mc-autonum="4."><span class="autonumber"><span class="ol1Number">4.</span></span>The sample next attempts to get a function pointer to the SafeNet extension <b>API CA_GetFunctionList</b> using <b>GetProcAddress</b> (Windows) or <b>dlsym</b> (Linux/UNIX).</p>
        <p class="ol1" data-mc-autonum="5."><span class="autonumber"><span class="ol1Number">5.</span></span>Once the function pointer is obtained, use the API to obtain a pointer called <b>SfntFunctions</b> that points to the static CK_SFNT_CA_FUNCTION_LIST structure in the library. This structure holds pointers to some but not all of the other SafeNet extension API functions supported by the library.</p>
        <p class="ol1" data-mc-autonum="6."><span class="autonumber"><span class="ol1Number">6.</span></span>At this point, if successful, SafeNet extension APIs may be invoked like the following:</p><pre class="listLevel1" xml:space="preserve">SfntFunctions-&gt;CA_GetHAState(...); &#160;&#160;<br />: &#160;&#160;<br />: &#160;&#160;<br />etc.</pre><pre class="listLevel1" xml:space="preserve">&#160;</pre>
        <p class="ol1" data-mc-autonum="7."><span class="autonumber"><span class="ol1Number">7.</span></span>Three sample makefiles are provided: </p>
        <p class="ul2" data-mc-autonum="&lt;b&gt;–&lt;/b&gt;"><span class="autonumber"><span class="ul2Bullet"><b>–</b></span></span>one for 32-bit Windows, </p>
        <p class="ul2" data-mc-autonum="&lt;b&gt;–&lt;/b&gt;"><span class="autonumber"><span class="ul2Bullet"><b>–</b></span></span>one for 32-bit Linux, and </p>
        <p class="ul2" data-mc-autonum="&lt;b&gt;–&lt;/b&gt;"><span class="autonumber"><span class="ul2Bullet"><b>–</b></span></span>one for 64-bit AIX.</p>
        <p class="listLevel1">You can easily port to another platform with minor changes.</p>
        <p class="ol1" data-mc-autonum="8."><span class="autonumber"><span class="ol1Number">8.</span></span>To build:</p>
        <table style="width: 97%;caption-side: top;mc-table-style: url('../../Resources/TableStyles/List1.css');" class="TableStyle-List1" cellspacing="0">
            <col class="Column-Column1" />
            <col class="Column-Column1" />
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1" style="font-weight: bold;">Windows</td>
                    <td class="BodyD-Column1-Body1">nmake -f Makefile.win32</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1" style="font-weight: bold;">Linux</td>
                    <td class="BodyD-Column1-Body1">make -f Makefile.linux.32</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyB-Column1-Body1" style="font-weight: bold;">Aix</td>
                    <td class="BodyA-Column1-Body1">make -f Makefile.aix.64</td>
                </tr>
            </tbody>
        </table>
        <p class="note" data-mc-autonum="&lt;b&gt;Note:&lt;/b&gt; &#160;"><span class="autonumber"><span><b>Note:</b> &#160;</span></span>Please note that this simple example loads the cryptoki library directly.  If your application requires integration with cklog or ckshim, you will need to load the required library (see SDK General for naming on your platform) in lieu of cryptoki.  cklog and ckshim will then use  the Chrystoki configuration file to locate and load cryptoki.    You also have the option of locating the cryptoki library by parsing the Chrystoki2 section of the Chrystoki config file.  If you do this, then the initial library (cryptoki, cklog, or ckshim) can be changed by simply updating the configuration file.</p>
        <p class="footer"><span class="DefaultProduct">SafeNet Network HSM</span> <span class="DefaultRelease">6.2.2</span> <span class="DefaultProjectTitle">Product Documentation</span> <br /><span class="DefaultPartNumber">007-011136-012</span> <span class="DefaultRevision">Rev. A</span> <span style="color: #5e5e5c;"><![CDATA[  ]]></span> <span class="DefaultDateLong">01 December 2016</span> <span style="color: #5e5e5c;"><![CDATA[  ]]></span> <span class="DefaultCopyright">Copyright 2001-2016</span>&#160;<span class="DefaultCompanyNameLong">Gemalto</span> <span style="color: #5e5e5c;"><![CDATA[  ]]></span>All rights reserved. </p>
    </body>
</html>