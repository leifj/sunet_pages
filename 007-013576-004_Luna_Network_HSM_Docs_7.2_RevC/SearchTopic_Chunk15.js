define({"1133":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_DES3_X919_MAC.htm",a:"The CKM_DES3_X919_MAC is a signature generation and verification mechanism, as defined ANSI X9.19-1996 Financial Institution Retail Message Authentication annex 1 Cipher Block Chaining Procedure. Summary Usage The CKM_DES3_X919_MAC mechanism is used with the C_VerifyInit and C_SignInit functions. It ...",t:"CKM_DES3_X919_MAC"},"1134":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_DH_PKCS_DERIVE.htm",a:"CKM_DH_PKCS_DERIVE Summary",t:"CKM_DH_PKCS_DERIVE"},"1135":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_DH_PKCS_KEY_PAIR_GEN.htm",a:"CKM_DH_PKCS_KEY_PAIR_GEN Summary",t:"CKM_DH_PKCS_KEY_PAIR_GEN"},"1136":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_DH_PKCS_PARAMETER_GEN.htm",a:"CKM_DH_PKCS_PARAMETER_GEN Summary",t:"CKM_DH_PKCS_PARAMETER_GEN"},"1137":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_DSA.htm",a:"CKM_DSA Summary",t:"CKM_DSA"},"1138":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_DSA_KEY_PAIR_GEN.htm",a:"CKM_DSA_KEY_PAIR_GEN Summary",t:"CKM_DSA_KEY_PAIR_GEN"},"1139":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_DSA_PARAMETER_GEN.htm",a:"CKM_DSA_PARAMETER_GEN Summary",t:"CKM_DSA_PARAMETER_GEN"},"1140":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_DSA_SHA1.htm",a:"CKM_DSA_SHA1 Summary",t:"CKM_DSA_SHA1"},"1141":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_DSA_SHA224.htm",a:"CKM_DSA_SHA224 Summary",t:"CKM_DSA_SHA224"},"1142":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_DSA_SHA256.htm",a:"CKM_DSA_SHA256 Summary",t:"CKM_DSA_SHA256"},"1143":{i:0.000685825304956132,u:"../Content/sdk/mechanisms/CKM_EC_EDWARDS_KEY_PAIR_GEN.htm",a:"CKM_EC_EDWARDS_KEY_PAIR_GEN The Edwards /EDDSA mechanisms are for generating keys over Edwards curves and using them for EDDSA signing. The keys generated by this mechanism are of type CKK_EC_EDWARDS  Allowed curve is \"Ed25519\".   Summary",t:"CKM_EC_EDWARDS_KEY_PAIR_GEN"},"1144":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_EC_KEY_PAIR_GEN.htm",a:"CKM_EC_KEY_PAIR_GEN Summary",t:"CKM_EC_KEY_PAIR_GEN"},"1145":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_EC_KEY_PAIR_GEN_W_EXTRA_BITS.htm",a:"CKM_EC_KEY_PAIR_GEN_W_EXTRA_BITS Summary",t:"CKM_EC_KEY_PAIR_GEN_W_EXTRA_BITS"},"1146":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_EC_MONTGOMERY_KEY_PAIR_GEN.htm",a:"Generate keys over Montgomery curves. Keys generated with this mechanism are of type CKK_EC_MONTGOMERY. They can be used with the existing CKM_ECDH1_DERIVE mechanism. Given that the ECDH mechanism is the same, and relies on \"point multiply\" on the given curve, no Montgomery-specific mechanism is ...",t:"CKM_EC_MONTGOMERY_KEY_PAIR_GEN"},"1147":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_ECDH1_COFACTOR_DERIVE.htm",a:"CKM_ECDH1_COFACTOR_DERIVE Summary",t:"CKM_ECDH1_COFACTOR_DERIVE"},"1148":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_ECDH1_DERIVE.htm",a:"Elliptic Curve Diffie-Hellman is an anonymous key-agreement protocol. CKM_ECDH1_DERIVE is the derive function for that protocol.  To enhance performance, we have created a proprietary call CA_DeriveKeyAndWrap, which is an optimization of C_DeriveKey with C_Wrap, merging the two functions into one ...",t:"CKM_ECDH1_DERIVE"},"1149":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_ECDSA.htm",a:"CKM_ECDSA Summary",t:"CKM_ECDSA"},"1150":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_ECDSA_GBCS_SHA256.htm",a:"CKM_ECDSA_GBCS_SHA256 Summary",t:"CKM_ECDSA_GBCS_SHA256"},"1151":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_ECDSA_SHA1.htm",a:"CKM_ECDSA_SHA1 Summary",t:"CKM_ECDSA_SHA1"},"1152":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_ECDSA_SHA224.htm",a:"CKM_ECDSA_SHA224 Summary",t:"CKM_ECDSA_SHA224"},"1153":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_ECDSA_SHA256.htm",a:"CKM_ECDSA_SHA256 Summary",t:"CKM_ECDSA_SHA256"},"1154":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_ECDSA_SHA384.htm",a:"CKM_ECDSA_SHA384 Summary",t:"CKM_ECDSA_SHA384"},"1155":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_ECDSA_SHA512.htm",a:"CKM_ECDSA_SHA512 Summary",t:"CKM_ECDSA_SHA512"},"1156":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_ECIES.htm",a:"CKM_ECIES This is a single part operation, so even if it is called using multi-part API, we accumulate the data (up to a maximum) and  return data only on the “final” operation. That is the meaning of \"Accumulating\" in the table, below.  Summary",t:"CKM_ECIES"},"1157":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_EDDSA.htm",a:"This mechanism makes use of keys generated by  CKM_EC_EDWARDS_KEY_PAIR_GEN  (using  keys generated over Edwards curves) for EDDSA signing. The keys used by this mechanism are of type CKK_EC_EDWARDS. For SafeNet HSM, the EDDSA algorithm is compliant with “PureEDDSA” as defined in RFC 8032 and “EdDSA ...",t:"CKM_EDDSA"},"1158":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_EDDSA_NACL.htm",a:"CKM_EDDSA_NACL Use EDDSA keys in Networking and Cryptography Library (\"salt\") sign/verify operations. Summary",t:"CKM_EDDSA_NACL"},"1159":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_GENERIC_SECRET_KEY_GEN.htm",a:"CKM_GENERIC_SECRET_KEY_GEN Summary",t:"CKM_GENERIC_SECRET_KEY_GEN"},"1160":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_HAS160.htm",a:"CKM_HAS160 Summary",t:"CKM_HAS160"},"1161":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_KCDSA_HAS160.htm",a:"CKM_KCDSA_HAS160 Summary",t:"CKM_KCDSA_HAS160"},"1162":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_KCDSA_HAS160_NO_PAD.htm",a:"CKM_KCDSA_HAS160_NO_PAD Summary",t:"CKM_KCDSA_HAS160_NO_PAD"},"1163":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_KCDSA_KEY_PAIR_GEN.htm",a:"CKM_KCDSA_KEY_PAIR_GEN Summary",t:"CKM_KCDSA_KEY_PAIR_GEN"},"1164":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_KCDSA_PARAMETER_GEN.htm",a:"CKM_KCDSA_PARAMETER_GEN Summary",t:"CKM_KCDSA_PARAMETER_GEN"},"1165":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_KCDSA_SHA1.htm",a:"CKM_KCDSA_SHA1 Summary",t:"CKM_KCDSA_SHA1"},"1166":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_KCDSA_SHA1_NO_PAD.htm",a:"CKM_KCDSA_SHA1_NO_PAD Summary",t:"CKM_KCDSA_SHA1_NO_PAD"},"1167":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_KCDSA_SHA224.htm",a:"CKM_KCDSA_SHA224 Summary",t:"CKM_KCDSA_SHA224"},"1168":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_KCDSA_SHA224_NO_PAD.htm",a:"CKM_KCDSA_SHA224_NO_PAD Summary",t:"CKM_KCDSA_SHA224_NO_PAD"},"1169":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_KCDSA_SHA256.htm",a:"CKM_KCDSA_SHA256 Summary",t:"CKM_KCDSA_SHA256"},"1170":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_KCDSA_SHA256_NO_PAD.htm",a:"CKM_KCDSA_SHA256_NO_PAD Summary",t:"CKM_KCDSA_SHA256_NO_PAD"},"1171":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_KCDSA_SHA384.htm",a:"CKM_KCDSA_SHA384 Summary",t:"CKM_KCDSA_SHA384"},"1172":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_KCDSA_SHA384_NO_PAD.htm",a:"CKM_KCDSA_SHA384_NO_PAD Summary",t:"CKM_KCDSA_SHA384_NO_PAD"},"1173":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_KCDSA_SHA512.htm",a:"CKM_KCDSA_SHA512 Summary",t:"CKM_KCDSA_SHA512"},"1174":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_KCDSA_SHA512_NO_PAD.htm",a:"CKM_KCDSA_SHA512_NO_PAD Summary",t:"CKM_KCDSA_SHA512_NO_PAD"},"1175":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_KEY_WRAP_SET_OAEP.htm",a:"CKM_KEY_WRAP_SET_OAEP Summary",t:"CKM_KEY_WRAP_SET_OAEP"},"1176":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_MD2.htm",a:"CKM_MD2 Summary",t:"CKM_MD2"},"1177":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_MD2_KEY_DERIVATION.htm",a:"CKM_MD2_KEY_DERIVATION Summary",t:"CKM_MD2_KEY_DERIVATION"},"1178":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_MD5_HMAC.htm",a:"CKM_MD5_HMAC Summary",t:"CKM_MD5_HMAC"},"1179":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_MD5_HMAC_GENERAL.htm",a:"CKM_MD5_HMAC_GENERAL Summary",t:"CKM_MD5_HMAC_GENERAL"},"1180":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_MD5_KEY_DERIVATION.htm",a:"CKM_MD5_KEY_DERIVATION Summary",t:"CKM_MD5_KEY_DERIVATION"},"1181":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_NIST_PRF_KDF.htm",a:"Summary Usage The CKM_NIST_PRF_KDF mechanism only supports counter mode. CKM_NIST_PRF_KDF is always allowed.  It does not matter if the “allow non-FIPS approved algorithms” HSM policy is on or off.  This mechanism can only be used with DES3_CMAC or AES_CMAC as the PRF. The SP 800-108 allows for some ...",t:"CKM_NIST_PRF_KDF"},"1182":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_PBE_MD2_DES_CBC.htm",a:"CKM_PBE_MD2_DES_CBC Summary",t:"CKM_PBE_MD2_DES_CBC"},"1183":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_PBE_SHA1_CAST5_CBC.htm",a:"CKM_PBE_SHA1_CAST5_CBC Summary",t:"CKM_PBE_SHA1_CAST5_CBC"},"1184":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_PBE_SHA1_DES2_EDE_CBC.htm",a:"CKM_PBE_SHA1_DES2_EDE_CBC Summary",t:"CKM_PBE_SHA1_DES2_EDE_CBC"},"1185":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_PBE_SHA1_DES2_EDE_CBC_OLD.htm",a:"CKM_PBE_SHA1_DES2_EDE_CBC_OLD Summary",t:"CKM_PBE_SHA1_DES2_EDE_CBC_OLD"},"1186":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_PBE_SHA1_DES3_EDE_CBC.htm",a:"CKM_PBE_SHA1_DES3_EDE_CBC Summary",t:"CKM_PBE_SHA1_DES3_EDE_CBC"},"1187":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_PBE_SHA1_DES3_EDE_CBC_OLD.htm",a:"CKM_PBE_SHA1_DES3_EDE_CBC_OLD Summary",t:"CKM_PBE_SHA1_DES3_EDE_CBC_OLD"},"1188":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_PBE_SHA1_RC2_40_CBC.htm",a:"CKM_PBE_SHA1_RC2_40_CBC Summary",t:"CKM_PBE_SHA1_RC2_40_CBC"},"1189":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_PBE_SHA1_RC2_128_CBC.htm",a:"CKM_PBE_SHA1_RC2_128_CBC Summary",t:"CKM_PBE_SHA1_RC2_128_CBC"},"1190":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_PBE_SHA1_RC4_40.htm",a:"CKM_PBE_SHA1_RC4_40 Summary",t:"CKM_PBE_SHA1_RC4_40"},"1191":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_PBE_SHA1_RC4_128.htm",a:"CKM_PBE_SHA1_RC4_128 Summary",t:"CKM_PBE_SHA1_RC4_128"},"1192":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_PKCS5_PBKD2.htm",a:"CKM_PKCS5_PBKD2 Summary",t:"CKM_PKCS5_PBKD2"},"1193":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_PRF_KDF.htm",a:"Summary Usage The CKM_NIST_PRF mechanism only supports counter mode. CKM_PRF_KDF is only allowed when the “allow non-FIPS approved algorithms” HSM policy is on.  This mechanism can be used with DES3_CMAC, AES_CMAC, ARIA_CMAC or SEED_CMAC as the PRF. The SP 800-108 allows for some variation on ...",t:"CKM_PRF_KDF"},"1194":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_RC2_CBC.htm",a:"CKM_RC2_CBC Summary",t:"CKM_RC2_CBC"},"1195":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_RC2_CBC_PAD.htm",a:"CKM_RC2_CBC_PAD Summary",t:"CKM_RC2_CBC_PAD"},"1196":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_RC2_ECB.htm",a:"CKM_RC2_ECB Summary",t:"CKM_RC2_ECB"},"1197":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_RC2_KEY_GEN.htm",a:"CKM_RC2_KEY_GEN Summary",t:"CKM_RC2_KEY_GEN"},"1198":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_RC2_MAC.htm",a:"CKM_RC2_MAC Summary",t:"CKM_RC2_MAC"},"1199":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_RC2_MAC_GENERAL.htm",a:"CKM_RC2_MAC_GENERAL Summary",t:"CKM_RC2_MAC_GENERAL"},"1200":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_RC4.htm",a:"CKM_RC4 Summary",t:"CKM_RC4"},"1201":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_RC4_KEY_GEN.htm",a:"CKM_RC4_KEY_GEN Summary",t:"CKM_RC4_KEY_GEN"},"1202":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_RC5_CBC.htm",a:"CKM_RC5_CBC Summary",t:"CKM_RC5_CBC"},"1203":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_RC5_CBC_PAD.htm",a:"CKM_RC5_CBC_PAD Summary",t:"CKM_RC5_CBC_PAD"},"1204":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_RC5_ECB.htm",a:"CKM_RC5_ECB Summary",t:"CKM_RC5_ECB"},"1205":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_RC5_KEY_GEN.htm",a:"CKM_RC5_KEY_GEN Summary",t:"CKM_RC5_KEY_GEN"},"1206":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_RC5_MAC.htm",a:"CKM_RC5_MAC Summary",t:"CKM_RC5_MAC"},"1207":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_RC5_MAC_GENERAL.htm",a:"CKM_RC5_MAC_GENERAL Summary",t:"CKM_RC5_MAC_GENERAL"},"1208":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_RSA_FIPS_186_3_AUX_PRIME_KEY_PAIR_GEN.htm",a:"CKM_RSA_FIPS_186_3_AUX_PRIME_KEY_PAIR_GEN Summary",t:"CKM_RSA_FIPS_186_3_AUX_PRIME_KEY_PAIR_GEN"},"1209":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_RSA_FIPS_186_3_PRIME_KEY_PAIR_GEN.htm",a:"CKM_RSA_FIPS_186_3_PRIME_KEY_PAIR_GEN Summary",t:"CKM_RSA_FIPS_186_3_PRIME_KEY_PAIR_GEN"},"1210":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_RSA_PKCS.htm",a:"CKM_RSA_PKCS Summary",t:"CKM_RSA_PKCS"},"1211":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_RSA_PKCS_KEY_PAIR_GEN.htm",a:"CKM_RSA_PKCS_KEY_PAIR_GEN Summary",t:"CKM_RSA_PKCS_KEY_PAIR_GEN"},"1212":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_RSA_PKCS_OAEP.htm",a:"The RSA PKCS OAEP mechanism can now use a supplied hashing mechanism. Previously RSA OAEP would always use SHA1 and returned an error if another was attempted. With current firmware, PKCS#11 API and ckdemo now accept a new mechanism. Allowed mechanisms are: CKM_SHA1 CKM_SHA224 CKM_SHA256 CKM_SHA384 ...",t:"CKM_RSA_PKCS_OAEP"},"1213":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_RSA_PKCS_PSS.htm",a:"CKM_RSA_PKCS_PSS Summary",t:"CKM_RSA_PKCS_PSS"},"1214":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_RSA_X_509.htm",a:"CKM_RSA_X_509 Summary",t:"CKM_RSA_X_509"},"1215":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_RSA_X9_31.htm",a:"CKM_RSA_X9_31 Summary",t:"CKM_RSA_X9_31"},"1216":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_RSA_X9_31_KEY_PAIR_GEN.htm",a:"CKM_RSA_X9_31_KEY_PAIR_GEN Summary",t:"CKM_RSA_X9_31_KEY_PAIR_GEN"},"1217":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_RSA_X9_31_NON_FIPS.htm",a:"CKM_RSA_X9_31_NON_FIPS Summary",t:"CKM_RSA_X9_31_NON_FIPS"},"1218":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SEED_CBC.htm",a:"CKM_SEED_CBC Summary",t:"CKM_SEED_CBC"},"1219":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SEED_CBC_PAD.htm",a:"CKM_SEED_CBC_PAD Summary",t:"CKM_SEED_CBC_PAD"},"1220":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SEED_CMAC.htm",a:"CKM_SEED_CMAC Summary",t:"CKM_SEED_CMAC"},"1221":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SEED_CMAC_GENERAL.htm",a:"CKM_SEED_CMAC_GENERAL Summary",t:"CKM_SEED_CMAC_GENERAL"},"1222":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SEED_CTR.htm",a:"CKM_SEED_CTR Summary",t:"CKM_SEED_CTR"},"1223":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SEED_ECB.htm",a:"CKM_SEED_ECB Summary",t:"CKM_SEED_ECB"},"1224":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SEED_KEY_GEN.htm",a:"CKM_SEED_KEY_GEN Summary",t:"CKM_SEED_KEY_GEN"},"1225":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SEED_MAC.htm",a:"CKM_SEED_MAC Summary",t:"CKM_SEED_MAC"},"1226":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SEED_MAC_GENERAL.htm",a:"CKM_SEED_MAC_GENERAL Summary",t:"CKM_SEED_MAC_GENERAL"},"1227":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA_1.htm",a:"CKM_SHA_1 Summary",t:"CKM_SHA_1"},"1228":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA_1_HMAC.htm",a:"CKM_SHA_1_HMAC Summary",t:"CKM_SHA_1_HMAC"},"1229":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA_1_HMAC_GENERAL.htm",a:"CKM_SHA_1_HMAC_GENERAL Summary",t:"CKM_SHA_1_HMAC_GENERAL"},"1230":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA1_EDDSA.htm",a:"CKM_SHA1_EDDSA Summary",t:"CKM_SHA1_EDDSA"},"1231":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA1_EDDSA_NACL.htm",a:"CKM_SHA1_EDDSA_NACL Summary",t:"CKM_SHA1_EDDSA_NACL"},"1232":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA1_KEY_DERIVATION.htm",a:"CKM_SHA1_KEY_DERIVATION Summary",t:"CKM_SHA1_KEY_DERIVATION"},"1233":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA1_RSA_PKCS.htm",a:"CKM_SHA1_RSA_PKCS Summary",t:"CKM_SHA1_RSA_PKCS"},"1234":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA1_RSA_PKCS_PSS.htm",a:"CKM_SHA1_RSA_PKCS_PSS Summary",t:"CKM_SHA1_RSA_PKCS_PSS"},"1235":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA1_RSA_X9_31.htm",a:"CKM_SHA1_RSA_X9_31 Summary",t:"CKM_SHA1_RSA_X9_31"},"1236":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA1_RSA_X9_31_NON_FIPS.htm",a:"CKM_SHA1_RSA_X9_31_NON_FIPS Summary",t:"CKM_SHA1_RSA_X9_31_NON_FIPS"},"1237":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA224.htm",a:"CKM_SHA224 Summary",t:"CKM_SHA224"},"1238":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA224_EDDSA.htm",a:"CKM_SHA224_EDDSA Summary",t:"CKM_SHA224_EDDSA"},"1239":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA224_EDDSA_NACL.htm",a:"CKM_SHA224_EDDSA_NACL Summary",t:"CKM_SHA224_EDDSA_NACL"},"1240":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA224_HMAC.htm",a:"CKM_SHA224_HMAC Summary",t:"CKM_SHA224_HMAC"},"1241":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA224_HMAC_GENERAL.htm",a:"CKM_SHA224_HMAC_GENERAL Summary",t:"CKM_SHA224_HMAC_GENERAL"},"1242":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA224_KEY_DERIVATION.htm",a:"CKM_SHA224_KEY_DERIVATION Summary",t:"CKM_SHA224_KEY_DERIVATION"},"1243":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA224_RSA_PKCS.htm",a:"CKM_SHA224_RSA_PKCS Summary",t:"CKM_SHA224_RSA_PKCS"},"1244":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA224_RSA_PKCS_PSS.htm",a:"CKM_SHA224_RSA_PKCS_PSS Summary",t:"CKM_SHA224_RSA_PKCS_PSS"},"1245":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA224_RSA_X9_31.htm",a:"CKM_SHA224_RSA_X9_31 Summary",t:"CKM_SHA224_RSA_X9_31"},"1246":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA224_RSA_X9_31_NON_FIPS.htm",a:"CKM_SHA224_RSA_X9_31_NON_FIPS Summary",t:"CKM_SHA224_RSA_X9_31_NON_FIPS"},"1247":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA256.htm",a:"CKM_SHA256 Summary",t:"CKM_SHA256"},"1248":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA256_EDDSA.htm",a:"CKM_SHA256_EDDSA Summary",t:"CKM_SHA256_EDDSA"},"1249":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA256_EDDSA_NACL.htm",a:"CKM_SHA256_EDDSA_NACL Summary",t:"CKM_SHA256_EDDSA_NACL"},"1250":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA256_HMAC.htm",a:"CKM_SHA256_HMAC Summary",t:"CKM_SHA256_HMAC"},"1251":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA256_HMAC_GENERAL.htm",a:"CKM_SHA256_HMAC_GENERAL Summary",t:"CKM_SHA256_HMAC_GENERAL"},"1252":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA256_KEY_DERIVATION.htm",a:"CKM_SHA256_KEY_DERIVATION Summary",t:"CKM_SHA256_KEY_DERIVATION"},"1253":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA256_RSA_PKCS.htm",a:"CKM_SHA256_RSA_PKCS Summary",t:"CKM_SHA256_RSA_PKCS"},"1254":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA256_RSA_PKCS_PSS.htm",a:"CKM_SHA256_RSA_PKCS_PSS Summary",t:"CKM_SHA256_RSA_PKCS_PSS"},"1255":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA256_RSA_X9_31.htm",a:"CKM_SHA256_RSA_X9_31 Summary",t:"CKM_SHA256_RSA_X9_31"},"1256":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA256_RSA_X9_31_NON_FIPS.htm",a:"CKM_SHA256_RSA_X9_31_NON_FIPS Summary",t:"CKM_SHA256_RSA_X9_31_NON_FIPS"},"1257":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA384.htm",a:"CKM_SHA384 Summary",t:"CKM_SHA384"},"1258":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA384_EDDSA.htm",a:"CKM_SHA384_EDDSA Summary",t:"CKM_SHA384_EDDSA"},"1259":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA384_EDDSA_NACL.htm",a:"CKM_SHA384_EDDSA_NACL Summary",t:"CKM_SHA384_EDDSA_NACL"},"1260":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA384_HMAC.htm",a:"CKM_SHA384_HMAC Summary",t:"CKM_SHA384_HMAC"},"1261":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA384_HMAC_GENERAL.htm",a:"CKM_SHA384_HMAC_GENERAL Summary",t:"CKM_SHA384_HMAC_GENERAL"},"1262":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA384_KEY_DERIVATION.htm",a:"CKM_SHA384_KEY_DERIVATION Summary",t:"CKM_SHA384_KEY_DERIVATION"},"1263":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA384_RSA_PKCS.htm",a:"CKM_SHA384_RSA_PKCS Summary",t:"CKM_SHA384_RSA_PKCS"},"1264":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA384_RSA_PKCS_PSS.htm",a:"CKM_SHA384_RSA_PKCS_PSS Summary",t:"CKM_SHA384_RSA_PKCS_PSS"},"1265":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA384_RSA_X9_31.htm",a:"CKM_SHA384_RSA_X9_31 Summary",t:"CKM_SHA384_RSA_X9_31"},"1266":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA384_RSA_X9_31_NON_FIPS.htm",a:"CKM_SHA384_RSA_X9_31_NON_FIPS Summary",t:"CKM_SHA384_RSA_X9_31_NON_FIPS"},"1267":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA512.htm",a:"CKM_SHA512 Summary",t:"CKM_SHA512"},"1268":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA512_EDDSA.htm",a:"CKM_SHA512_EDDSA Summary",t:"CKM_SHA512_EDDSA"},"1269":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA512_EDDSA_NACL.htm",a:"CKM_SHA512_EDDSA_NACL Summary",t:"CKM_SHA512_EDDSA_NACL"},"1270":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA512_HMAC.htm",a:"CKM_SHA512_HMAC Summary",t:"CKM_SHA512_HMAC"},"1271":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA512_HMAC_GENERAL.htm",a:"CKM_SHA512_HMAC_GENERAL Summary",t:"CKM_SHA512_HMAC_GENERAL"},"1272":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA512_KEY_DERIVATION.htm",a:"CKM_SHA512_KEY_DERIVATION Summary",t:"CKM_SHA512_KEY_DERIVATION"},"1273":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA512_RSA_PKCS.htm",a:"CKM_SHA512_RSA_PKCS Summary",t:"CKM_SHA512_RSA_PKCS"},"1274":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA512_RSA_PKCS_PSS.htm",a:"CKM_SHA512_RSA_PKCS_PSS Summary",t:"CKM_SHA512_RSA_PKCS_PSS"},"1275":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA512_RSA_X9_31.htm",a:"CKM_SHA512_RSA_X9_31 Summary",t:"CKM_SHA512_RSA_X9_31"},"1276":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SHA512_RSA_X9_31_NON_FIPS.htm",a:"CKM_SHA512_RSA_X9_31_NON_FIPS Summary",t:"CKM_SHA512_RSA_X9_31_NON_FIPS"},"1277":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SM3.htm",a:"  SM3 is a hash function published by the Chinese Commercial Cryptography Administration Office for the use of electronic authentication service system. The design of SM3 builds upon the design of the SHA-2 hash function, but introduces additional strengthening features. For SafeNet Luna Network ...",t:"CKM_SM3  "},"1278":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SM3_HMAC.htm",a:"SM3 is a hash function published by the Chinese Commercial Cryptography Administration Office for the use of electronic authentication service system. The design of SM3 builds upon the design of the SHA-2 hash function, but introduces additional strengthening features. For SafeNet Luna Network HSMs, ...",t:"CKM_SM3_HMAC"},"1279":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SM3_HMAC_GENERAL.htm",a:"SM3 is a hash function published by the Chinese Commercial Cryptography Administration Office for the use of electronic authentication service system. The design of SM3 builds upon the design of the SHA-2 hash function, but introduces additional strengthening features. For SafeNet Luna Network HSMs, ...",t:"CKM_SM3_HMAC_GENERAL"},"1280":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SM3_KEY_DERIVATION.htm",a:"SM3 is a hash function published by the Chinese Commercial Cryptography Administration Office for the use of electronic authentication service system. The design of SM3 builds upon the design of the SHA-2 hash function, but introduces additional strengthening features. For SafeNet Luna Network HSMs, ...",t:"CKM_SM3_KEY_DERIVATION"},"1281":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SSL3_KEY_AND_MAC_DERIVE.htm",a:"CKM_SSL3_KEY_AND_MAC_DERIVE Summary",t:"CKM_SSL3_KEY_AND_MAC_DERIVE"},"1282":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SSL3_MASTER_KEY_DERIVE.htm",a:"CKM_SSL3_MASTER_KEY_DERIVE Summary",t:"CKM_SSL3_MASTER_KEY_DERIVE"},"1283":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SSL3_MD5_MAC.htm",a:"CKM_SSL3_MD5_MAC Summary",t:"CKM_SSL3_MD5_MAC"},"1284":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SSL3_PRE_MASTER_KEY_GEN.htm",a:"CKM_SSL3_PRE_MASTER_KEY_GEN Summary",t:"CKM_SSL3_PRE_MASTER_KEY_GEN"},"1285":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_SSL3_SHA1_MAC.htm",a:"CKM_SSL3_SHA1_MAC Summary",t:"CKM_SSL3_SHA1_MAC"},"1286":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_X9_42_DH_DERIVE.htm",a:"CKM_X9_42_DH_DERIVE Summary",t:"CKM_X9_42_DH_DERIVE"},"1287":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_X9_42_DH_HYBRID_DERIVE.htm",a:"CKM_X9_42_DH_HYBRID_DERIVE Summary",t:"CKM_X9_42_DH_HYBRID_DERIVE"},"1288":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_X9_42_DH_KEY_PAIR_GEN.htm",a:"CKM_X9_42_DH_KEY_PAIR_GEN Summary",t:"CKM_X9_42_DH_KEY_PAIR_GEN"},"1289":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_X9_42_DH_PARAMETER_GEN.htm",a:"CKM_X9_42_DH_PARAMETER_GEN Summary",t:"CKM_X9_42_DH_PARAMETER_GEN"},"1290":{i:0.000370715076300201,u:"../Content/sdk/mechanisms/CKM_XOR_BASE_AND_DATA_W_KDF.htm",a:"CKM_XOR_BASE_AND_DATA_W_KDF Summary",t:"CKM_XOR_BASE_AND_DATA_W_KDF"},"1291":{i:0.000396327894938688,u:"../Content/sdk/using/using.htm",a:"This chapter describes how to use the SDK to develop applications that exercise the HSM. It contains the following topics: Libraries and Applications Application IDs Named Curves and User-Defined Parameters Curve Names By Organization Capability and Policy Configuration Control Using the SafeNet API ...",t:"Using the SafeNet SDK"},"1292":{i:0.000765296248584121,u:"../Content/sdk/using/libraries_and_applications.htm",a:"This section explains how to make the Chrystoki library available to \n the other components of the SafeNet Software Development Kit. An application has no knowledge of which library is to be loaded nor \n does the application know the library\u0027s location. For \nthese reasons, a special scheme must be ...",t:"Libraries and Applications"},"1293":{i:0.00290814367776345,u:"../Content/sdk/using/application_ids.htm",a:"Within Chrystoki, each application has an application ID, a 64-bit integer, normally specified in two 32-bit parts. \nWhen an application invokes C_Initialize, the Chrystoki library automatically generates a default application ID. The \ndefault value is based on the application\u0027s process ID, so ...",t:"Application IDs"},"1294":{i:0.00523875903905242,u:"../Content/sdk/using/named_curves_and_user-defined_parameters.htm",a:"SafeNet Luna Network HSM is a PKCS#11-oriented device. The HSM firmware statically defines NIST named curve OIDs and curve parameters by default. You can also define other non-NIST curve OIDS and parameters such as Brainpool. SafeNet Luna Network HSM can decode and use the ecParameters structure for ...",t:"Named Curves and User-Defined Parameters"},"1295":{i:0.000426861964800025,u:"../Content/sdk/using/ecc_curve_cross-reference.htm",a:"Elliptic curves are widely used, despite being defined and described differently by different groups in the cryptographic world. The following table attempts to reconcile curve names across three different standards organizations, the SEC Group, ANSI, and NIST. For additional information about the ...",t:"Curve Names By Organization"},"1296":{i:0.000426861964800025,u:"../Content/sdk/using/configuration_control_via_luna_api.htm",a:"The configuration and control of the SafeNet Luna Network HSM is provided by a set of capabilities and policies which you can query and set using the SafeNet API. See  for more information.  HSM Capabilities and Policies Each HSM has a set of capabilities. An HSM\u0027s capability set defines \n and ...",t:"Capability and Policy Configuration Control Using the SafeNet API"},"1297":{i:0.000426861964800025,u:"../Content/sdk/using/connection_timeout.htm",a:"The connection timeout is not configurable. Linux and Unix Connection Timeout On Unix platforms, the client performs a connect on the socket. If the socket is busy or unavailable, the client performs a select on the socket with the timeout set to 10 seconds (hardcoded). If the select call returns ...",t:"Connection Timeout"},"1298":{i:0.000396327894938688,u:"../Content/sdk/design/design.htm",a:"This chapter provides guidance for creating applications that use specific SafeNet Luna Network HSM configurations or features. It contains the following topics: PED-Authenticated HSMs High Availability (HA) Implementations Key Attribute Defaults Object Usage Count Migrating Keys From Software to a ...",t:"Design Considerations"},"1299":{i:0.000426861964800025,u:"../Content/sdk/design/ped_authenticated_hsms.htm",a:"In systems or applications using SafeNet Luna Network HSMs, Luna PED is required for FIPS 140-2 level 3 security. In normal use, Luna PED \n supplies PINs and certain other critical security parameters to the token/HSM, \n invisibly to the user. This prevents other persons from viewing PINs, \n etc. on ...",t:"PED-Authenticated HSMs"},});